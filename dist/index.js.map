{"version":3,"sources":["controller.ts","discovery.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["import fetch from 'node-fetch';\n\nconst UPDATE_CACHE = 30;\n\nexport type ControllerSettings = {\n  AirStreamDeviceUId: string,\n  DeviceType: 'ASH',\n  SysOn: 'on'|'off',\n  SysMode: 'cool'|'heat'|'vent'|'dry'|'auto',\n  SysFan: 'low'|'med'|'high'|'auto',\n  SleepTimer: 0|30|60|90|120,\n  UnitType: string,\n  Supply: string, // 'number' in vent temp\n  Setpoint: string, // 'number'\n  Temp: string, // 'number'\n  RAS: 'master'|'RAS'|'zones',\n  CtrlZone: number,\n  Tag1: string,\n  Tag2: string,\n  Warnings: 'none'|'filter',\n  ACError: string, // This is a 3 character string. If this filed reports \" OK\", then there are no faults present.\n  Id: number,\n  EcoLock: 'true'|'false',\n  EcoMax: string, // 'number'\n  EcoMin: string, // 'number'\n  NoOfConst: number,\n  NoOfZones: number,\n  // \"110\" – the system is zone control only and all the zones are OPEN/CLOSE zones \n  // \"210\" - the system is zone control only. Zones can be temperature controlled, dependant on the zone settings.\n  // \"310\" – the system is zone control and unit control.\n  // \"320\" - unknown, but this is what mine is.\n  SysType: '110'|'210'|'310'|'320',\n  AirflowLock: 'off'|'onMin'|'off',\n  UnitLocked: 'true'|'false',\n  FreeAir: 'disabled'|'off'|'on',\n  FanAuto: 'disabled'|'3-speed'|'2-speed'|'var-speed',\n  OemMake: 0\n}\n\ntype ZoneSettings = { \n  AirStreamDeviceUId: string,\n  Id: 0,\n  Index: number,\n  Name: string,\n  Type: 'auto'|'opcl'|'const',\n  Mode: 'open'|'close'|'auto',\n  SetPoint: number,\n  Temp: number,\n  MaxAir: number, // 0-100\n  MinAir: number, // 0-100\n  Const: number, // If the value is 255 the zone is not a constant. Otherwise the number indicates the number of a constant.\n  ConstA: 'true'|'false',\n  DmpFlt: 'false',\n  Master: 'false',\n  iSense: 'off' \n}\n\ninterface ZonesById {\n  [key: string]: ZoneSettings;\n}\n\nexport default class Controller {\n  settings: ControllerSettings;\n  zones: ZoneSettings[] = [];\n  private baseUrl: string;\n  private zonesUpdated: Date;\n  private systemUpdated: Date;\n  \n  public ready: Promise<void>;\n\n\n  constructor(\n    public ip: string,\n    public id: string,\n    public modules: string[]\n  ) {\n    this.baseUrl = `http://${ip}`;\n    this.ready = this.setup();\n  }\n  \n  async setup() {\n    await this.getSystemSettings();\n    await this.getZoneSettings();\n  }\n\n  private async getSystemSettings() {\n    // console.log(\"THIS:\", this);\n    // console.log(\"Fetching data from\", `${this.baseUrl}/SystemSettings`);\n    const sysRequest = await fetch(`${this.baseUrl}/SystemSettings`);\n    const sysSettings = await sysRequest.json()\n    // console.log(\"System settings\", sysSettings);\n    this.settings = sysSettings;\n    this.systemUpdated = new Date();\n  }\n\n  public async currentSystem() {\n    const currentTime = new Date();\n    if (!this.systemUpdated || (currentTime.valueOf() - this.systemUpdated.valueOf()) / 1000 >  UPDATE_CACHE) {\n      await this.getSystemSettings();\n    }\n    return this.settings;\n  }\n\n  private async getZoneSettings() {\n    const noOfZones = this.settings.NoOfZones;\n    const zoneRequest = await this.get('Zones1_4');\n    let zoneSettings: ZoneSettings[] = await zoneRequest.json();\n    if (noOfZones > 4) {\n      const zoneRequest = await this.get('Zones5_8');\n      zoneSettings = zoneSettings.concat(await zoneRequest.json());\n    }\n    if (noOfZones > 8) {\n      const zoneRequest = await this.get('Zones9_12');\n      zoneSettings = zoneSettings.concat(await zoneRequest.json());\n    }\n    this.zones = zoneSettings.filter((zone) => zone.Index < noOfZones);\n    // console.log(\"Zome Settings\", this.zones);\n    this.zonesUpdated = new Date();\n  }\n\n  async currentZones() {\n    const currentTime = new Date();\n    if (!this.zonesUpdated || (currentTime.valueOf() - this.zonesUpdated.valueOf()) / 1000 >  UPDATE_CACHE) {\n      await this.getZoneSettings();\n    }\n    return this.zones;\n  }\n\n  async getSchedualSettings() {\n    this.get('Schedules1_5');\n  }\n\n  /*\n   * COMMANDS\n   */\n  async toggleSystem(setTo?: ControllerSettings['SysOn']) {\n    const toState = setTo || this.settings.SysOn == \"on\" ? \"off\" : \"on\"\n    await this.post('SystemON', {\n      SystemOn: toState\n    });\n  }\n\n  async setSystemMode(mode: ControllerSettings['SysMode']){\n    return this.post('SystemMODE', {\n      \"SystemMODE\": mode\n    });\n  }\n\n  async setZoneTarget(zone: string, state: string) {\n    return this.post('ZoneCommand',  {\n      \"ZoneCommand\": {\n        \"ZoneNo\": zone,\n        \"Command\": state\n      }\n    });\n  }\n\n  /*\n   * NETWORK\n   */  \n  get(path) {\n    return fetch(`${this.baseUrl}/${path}`);\n  }\n  post(path, body) {\n    return fetch(`${this.baseUrl}/${path}`, {\n      method: 'POST',\n      body\n    });\n  }\n\n}\n","import dgram from 'dgram';\nimport { AddressInfo } from 'net';\nimport Controller from './controller';\n\nconst discoveryMsg = 'IASD';\nconst discoveryPort = 12107;\nconst discoveryListenPort = 10086;\nconst heartBeatPort = 7005;\n\nexport default class Discovery {\n  discovery: dgram.Socket;\n  heartBeat: dgram.Socket;\n  controllerClass = Controller;\n  public controllers: Controller[] = [];\n\n  public foundFirst: Promise<Controller>;\n  private foundResolve: (value: Controller) => void;\n\n  constructor() {\n    // Create udp server socket object.\n    const discovery = this.discovery = dgram.createSocket(\"udp4\");\n    discovery.bind(discoveryListenPort);\n    discovery.on('message', this.onMessage.bind(this));\n    discovery.on('error', this.onError.bind(this));\n    // When udp server started and listening.\n    discovery.on('listening', this.onListen.bind(this));\n\n    const heartBeat = this.heartBeat = dgram.createSocket(\"udp4\");\n    heartBeat.bind(heartBeatPort);\n\n    heartBeat.on('message', this.onHeartBeat.bind(this));\n\n    this.foundFirst = new Promise((resolve, _reject) => this.foundResolve = resolve);\n  }\n\n  onMessage(msgBuffer, rinfo) {\n    var address = this.discovery.address() as AddressInfo;\n    var msg = msgBuffer.toString();\n    if (msg.startsWith(\"ASPort_\")) {\n      this.controllerFound(msg, rinfo.address);\n    } else {\n      console.log(`Dis: \"${msg}\" - from ${rinfo.address}:${rinfo.port}`);\n    }\n  }\n\n  onError(err) {\n    console.log(`discovery error:\\n${err.stack}`);\n    this.discovery.close();\n  }\n\n  onListen() {\n    // Get and print udp server listening ip address and port number in log console. \n    var address = this.discovery.address() as AddressInfo;\n    console.log('UDP Server started and listening on ' + address.address + \":\" + address.port);\n\n    this.discovery.setBroadcast(true);\n\n    const message = Buffer.from(discoveryMsg);\n    this.discovery.send(message, discoveryPort, '255.255.255.255', (err) => {\n      console.log(\"Message Sent\");\n    });\n  }\n\n  onHeartBeat(msg, rinfo) {\n    console.log(`Heartbeat got: ${msg} from ${rinfo.address}:${rinfo.port}`);\n  }\n\n  controllerFound(data: string, address: string) {\n    const [portCode, macCode, ipCode, ...modules] = data.split(\",\");\n    console.log(\"Found Controller\", portCode, macCode, ipCode);\n    console.log(\"With modules\", ...modules);\n    const [,ip] = ipCode.split('_');\n    const [,mac] = macCode.split('_');\n    \n    const controller = new Controller(ip, mac, modules);\n    this.controllers.push(controller);\n\n    if (typeof this.foundResolve === \"function\") {\n      this.foundResolve(controller);\n      this.foundResolve = undefined;\n    }\n  }\n\n}","import Discovery from './discovery';\nimport Controller, { ControllerSettings } from './controller';\n\nexport default class IZoneAPI {\n\n  discovery: Discovery;\n  ready: Promise<Controller>;\n  controller: Controller;\n\n  constructor() {\n    this.discovery = new Discovery();\n\n    this.ready = this.discovery.foundFirst.then(controller => {\n      this.controller = controller\n      return controller.ready;\n    }).then(() => this.controller);\n  }\n\n  async getIP() {\n    const controller = await this.ready;\n    return controller.ip;\n  }\n\n  async getActiveZones() {\n    const controller = await this.ready;\n    return await controller.currentZones();\n  }\n\n  async currentSystem() {\n    return (await this.ready).currentSystem();\n  }\n  async system(property: string) {\n    return (await this.currentSystem())[property];\n  }\n\n  async getState() {\n    return this.system('SysOn');\n  }\n  async setOn() {\n    this.controller.toggleSystem(\"on\");\n  }\n  async setOff() {\n    this.controller.toggleSystem(\"off\");\n  }\n\n  async getHeaterCoolerState() {\n    return this.system('SysMode');\n  }\n\n  async setSystemMode(mode: ControllerSettings['SysMode']) {\n    return (await this.ready).setSystemMode(mode);\n  }\n\n  async getZoneTemp(zoneIdx: number) {\n    const zones = await (await this.ready).currentZones();\n    return zones.find(zone => zone.Index === zoneIdx).Temp;\n  }\n  async getZoneTarget(zoneIdx: number) {\n    const zones = await (await this.ready).currentZones();\n    const zone = zones.find(zone => zone.Index === zoneIdx);\n\n    var temperature = zone.SetPoint;\n    var state = zone.Mode; //open,close,auto\n    if(state == 'auto') {\n      return temperature;\n    } else {\n      return state;\n    }\n  }\n  async setZoneTarget(zoneIdx: number, target: number) {\n    return (await this.ready).setZoneTarget(zoneIdx.toString(), target.toString());\n  }\n\n  async getZoneTargetTemperature(zoneIdx: number) {\n    const zones = await (await this.ready).currentZones();\n    return zones.find(zone => zone.Index === zoneIdx).SetPoint;\n  }\n\n  async getDuctTemp() {\n    return this.system('Temp');\n  }\n\n  async getACTarget() {\n\n  }\n\n  async setACTarget(target) {\n\n  }\n\n}\n"]}